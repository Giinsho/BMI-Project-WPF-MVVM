<Window x:Class="HealthHelper.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HealthHelper"
        xmlns:local1="clr-namespace:HealthHelper.ViewModel"
        xmlns:models="clr-namespace:HealthHelper.Models"
        xmlns:converter="clr-namespace:HealthHelper.Converter"
       
        mc:Ignorable="d"
        Title="UserView" Height="800" Width="1366" x:Name="mainWindow" WindowStartupLocation="CenterScreen" 
        >
    <Window.Resources>
        <local1:UserViewModel  x:Key="data"/>
        <BooleanToVisibilityConverter x:Key="Converter" />
        <converter:EnumToBooleanConverter x:Key="EnumToBoolConverter" />
        <converter:IntConverter x:Key="IntConverter"/>
        <converter:DoubleConverter x:Key="DoubleConverter"/>
        <ControlTemplate x:Key="validationTemplate">
            <StackPanel>
                <Grid>
                    <Rectangle  Fill="Pink" Stroke="Black" StrokeThickness="1"/>
                    <TextBlock  Foreground="Red" FontSize="12" Text="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                </Grid>
                <AdornedElementPlaceholder x:Name="placeholder"/>
            </StackPanel>
        </ControlTemplate>


        <Style TargetType="Button">
            <Style.Triggers>
                <EventTrigger RoutedEvent="PreviewMouseDown">
                    <SoundPlayerAction Source="/ClickingButton;component/click.wav" />
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!--error message.-->
        <Style x:Key="textBoxInError" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                    <Setter Property="BorderThickness"
                            Value="0"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ItemContainerStyle" TargetType="{x:Type ListViewItem}">
            <Style.Triggers>
                <Trigger Property="ListBox.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="CornflowerBlue"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="ListBox.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="LightBlue"/>
                    <Setter Property="Foreground" Value="Navy"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="FontSize" Value="20"/>
                    <Setter Property="Background" Value="PaleVioletRed"/>
                    <Setter Property="Foreground" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Orange"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                
            </Style.Triggers>
        
        </Style>

    </Window.Resources>
  
    <Window.DataContext>
        <local1:UserViewModel/>
    </Window.DataContext>
    <Canvas Margin="0,0,0,-6" x:Name="mainCanvas" >
        <Canvas x:Name="canvasTitle" Height="79" Width="460" HorizontalAlignment="Left" Canvas.Left="30" Canvas.Top="10" VerticalAlignment="Top">

            <TextBlock VerticalAlignment="Top" Text="Health Helper "  Canvas.Right="10" Canvas.Left="75" TextWrapping="Wrap" Canvas.Top="10"  FontSize="48" FontFamily="Bahnschrift" FontWeight="Normal" Height="59" Width="299" HorizontalAlignment="Left">
                <TextBlock.Style>
                    <Style/>
                </TextBlock.Style>
                <TextBlock.Foreground>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFFF08D4"/>
                        <GradientStop Color="#FF05FFF9" Offset="1"/>
                        <GradientStop Color="#FF0536FC" Offset="0.986"/>
                    </LinearGradientBrush>
                </TextBlock.Foreground>
                <TextBlock.Effect>
                    <DropShadowEffect
                  ShadowDepth="5"
                  Direction="0"
                  Color="DarkViolet"
                  Opacity="1"
                 BlurRadius="8"/>
                </TextBlock.Effect>
            </TextBlock>

            <Image  Source="../../img/cardiogram.png" x:Name="healthImg" Height="60" Width="60"  Canvas.Left="388" Canvas.Top="10">
                <Image.Effect>
                    <DropShadowEffect
                  ShadowDepth="0"
                  Direction="1"
                  Color="DeepPink"
                  Opacity="1"
                 BlurRadius="20"/>
                </Image.Effect>
                <Image.Triggers>
                    <EventTrigger RoutedEvent="Image.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="healthImg"
                                Storyboard.TargetProperty="Opacity"
                                From="1.0" To="0.1" Duration="0:0:1.5"
                                AutoReverse="True" RepeatBehavior="Forever"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Image.Triggers>
            </Image>

        </Canvas>

        <Canvas x:Name="userCanvas" MinHeight="500" MinWidth="900" Width="963" Height="575" Canvas.Left="5" Canvas.Top="94" HorizontalAlignment="Left" VerticalAlignment="Top">
            <Label Foreground="Cyan"  Content="Nazwa użytkownika" Canvas.Left="105" Canvas.Top="34" Height="38" Width="240" FontSize="24"  FontFamily="Bahnschrift" FontWeight="Normal" Opacity="0.8" HorizontalAlignment="Center" VerticalAlignment="Top">
                <Label.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFB79FC8"/>
                        <GradientStop Color="#FF099FFF" Offset="1"/>
                        <GradientStop Color="#FF012034" Offset="1"/>
                    </LinearGradientBrush>
                </Label.Background>
            </Label>
            <TextBox 
                Style="{StaticResource textBoxInError}"
                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                x:Name="nazwa" Foreground="Cyan" Canvas.Left="370" Canvas.Top="34" Height="38" Width="312" 
                FontSize="24"  FontFamily="Bahnschrift" FontWeight="Medium" Opacity="0.8" HorizontalAlignment="Left" VerticalAlignment="Center">
                <TextBox.Text>
                    <Binding  Path="UserName" UpdateSourceTrigger="PropertyChanged" ValidatesOnExceptions="True" >
                        <Binding.ValidationRules>
                            <!--DataErrorValidationRule checks for validation -->
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
                <TextBox.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFB79FC8"/>
                        <GradientStop Color="#FF099FFF" Offset="1"/>
                        <GradientStop Color="#FF012034" Offset="1"/>
                    </LinearGradientBrush>
                </TextBox.Background>
            </TextBox>
            <TextBlock Canvas.Left="370" Canvas.Top="39" Height="38" Width="221" 
                FontSize="24"  FontFamily="Bahnschrift" FontWeight="Medium" Opacity="1"  IsHitTestVisible="False" Text="Użytkownik" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="Pink">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=nazwa}" Value="">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>



            <Label Foreground="Cyan"  Content="Wzrost [cm]" Canvas.Left="105" Canvas.Top="77" Height="38" Width="240" FontSize="24"  FontFamily="Bahnschrift" FontWeight="Normal" Opacity="0.8" HorizontalAlignment="Center" VerticalAlignment="Top">
                <Label.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFB79FC8"/>
                        <GradientStop Color="#FF099FFF" Offset="1"/>
                        <GradientStop Color="#FF012034" Offset="1"/>
                    </LinearGradientBrush>
                </Label.Background>
            </Label>
            <TextBox 
                Style="{StaticResource textBoxInError}"
                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                x:Name="wzrost" Foreground="Cyan" Canvas.Left="370" Canvas.Top="77" Height="38" Width="312" 
                FontSize="24"  FontFamily="Bahnschrift" FontWeight="Medium" Opacity="0.8" HorizontalAlignment="Left" VerticalAlignment="Center">

                <TextBox.Text>
                    <Binding  Converter= "{ StaticResource DoubleConverter }"  Path="Height" UpdateSourceTrigger="PropertyChanged" ValidatesOnExceptions="True" >
                        <Binding.ValidationRules>
                            <!--DataErrorValidationRule checks for validation -->
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
                
                <TextBox.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFB79FC8"/>
                        <GradientStop Color="#FF099FFF" Offset="1"/>
                        <GradientStop Color="#FF012034" Offset="1"/>
                    </LinearGradientBrush>
                </TextBox.Background>
            </TextBox>
            
            <TextBlock Canvas.Left="370" Canvas.Top="82" Height="38" Width="221" 
                FontSize="24"  FontFamily="Bahnschrift" FontWeight="Medium" Opacity="1"  IsHitTestVisible="False" Text="165" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="Pink">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=wzrost}" Value="">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>




            <Label Foreground="Cyan"  Content="Wiek" Canvas.Left="105" Canvas.Top="120" Height="38" Width="240" FontSize="24"  FontFamily="Bahnschrift" FontWeight="Normal" Opacity="0.8" HorizontalAlignment="Center" VerticalAlignment="Top">
                <Label.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFB79FC8"/>
                        <GradientStop Color="#FF099FFF" Offset="1"/>
                        <GradientStop Color="#FF012034" Offset="1"/>
                    </LinearGradientBrush>
                </Label.Background>
            </Label>
            <TextBox 
                Style="{StaticResource textBoxInError}"
                Validation.ErrorTemplate="{StaticResource validationTemplate}"
              
                x:Name="wiek" Foreground="Cyan" Canvas.Left="370" Canvas.Top="120" Height="38" Width="312"  
                FontSize="24"  FontFamily="Bahnschrift" FontWeight="Medium" Opacity="0.8" HorizontalAlignment="Left" VerticalAlignment="Center">

                <TextBox.Text>
                    <Binding  Converter= "{ StaticResource IntConverter }" Path="YearsOld" UpdateSourceTrigger="PropertyChanged" ValidatesOnExceptions="True" >
                        
                        <Binding.ValidationRules>
                            <!--DataErrorValidationRule checks for validation -->
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                     
                    </Binding>
                </TextBox.Text>


                <TextBox.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFB79FC8"/>
                        <GradientStop Color="#FF099FFF" Offset="1"/>
                        <GradientStop Color="#FF012034" Offset="1"/>
                    </LinearGradientBrush>
                </TextBox.Background>
            </TextBox>
            <TextBlock Canvas.Left="370" Canvas.Top="125" Height="38" Width="221" 
                FontSize="24"  FontFamily="Bahnschrift" FontWeight="Medium" Opacity="1"  IsHitTestVisible="False" Text="34 " VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="Pink">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=wiek}" Value="">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>



            <Label Foreground="Cyan"  Content="Waga [kg]" Canvas.Left="105" Canvas.Top="163" Height="38" Width="240"
                    FontSize="24"  FontFamily="Bahnschrift" FontWeight="Normal" Opacity="0.8" HorizontalAlignment="Center" VerticalAlignment="Top">
                <Label.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFB79FC8"/>
                        <GradientStop Color="#FF099FFF" Offset="1"/>
                        <GradientStop Color="#FF012034" Offset="1"/>
                    </LinearGradientBrush>
                </Label.Background>

            </Label>
            <TextBox
                Style="{StaticResource textBoxInError}"
                Validation.ErrorTemplate="{StaticResource validationTemplate}"
             
                x:Name="waga" Foreground="Cyan" Canvas.Left="370" Canvas.Top="163" Height="38" Width="312" 
                FontSize="24"  FontFamily="Bahnschrift" FontWeight="Medium" Opacity="0.8" HorizontalAlignment="Left" VerticalAlignment="Center">

                <TextBox.Text>
                    <Binding Converter= "{ StaticResource DoubleConverter }"  Path="Weight" UpdateSourceTrigger="PropertyChanged" ValidatesOnExceptions="True" >
                        <Binding.ValidationRules>
                            <!--DataErrorValidationRule checks for validation -->
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
                
                <TextBox.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFB79FC8"/>
                        <GradientStop Color="#FF099FFF" Offset="1"/>
                        <GradientStop Color="#FF012034" Offset="1"/>
                    </LinearGradientBrush>
                </TextBox.Background>


            </TextBox>
            <TextBlock Canvas.Left="370" Canvas.Top="168" Height="38" Width="221" 
                FontSize="24"  FontFamily="Bahnschrift" FontWeight="Medium" Opacity="1"  IsHitTestVisible="False" Text="60 " VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="Pink">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=waga}" Value="">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>


            <Label Foreground="Cyan" Content="Płeć" Canvas.Left="105" Canvas.Top="206" Height="38" Width="240"
                FontSize="24"  FontFamily="Bahnschrift" FontWeight="Medium" Opacity="0.8" HorizontalAlignment="Center" VerticalAlignment="Top">
                <Label.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFB79FC8"/>
                        <GradientStop Color="#FF099FFF" Offset="1"/>
                        <GradientStop Color="#FF012034" Offset="1"/>
                    </LinearGradientBrush>
                </Label.Background>
            </Label>

           


      
            <RadioButton 
             Validation.ErrorTemplate="{StaticResource validationTemplate}"
                GroupName="CharacterGender" Content="Mężczyzna" IsChecked="{Binding Path=Gender, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static models:Gender.Male}}" 
                         Canvas.Left="369" Canvas.Top="210" Height="15" Width="94" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Normal" Background="#FF00A7FF"
                         >
                <RadioButton.LayoutTransform>
                    <ScaleTransform ScaleX="2" ScaleY="2"/>
                </RadioButton.LayoutTransform>
            

            </RadioButton>
            <RadioButton 
               
                GroupName="CharacterGender" Content="Kobieta" IsChecked="{Binding Path=Gender, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static models:Gender.Female}}"
                         Canvas.Left="562" Canvas.Top="210" Height="15" Width="94" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Normal" Background="#FFAB00FF"
                         >
                <RadioButton.LayoutTransform>
                    <ScaleTransform ScaleX="2" ScaleY="2"/>
                </RadioButton.LayoutTransform>
             
            </RadioButton>
               
            
            <Button Command="{Binding cmdAddUser}"
                    x:Name="cmdAddUser" 
                    Click="Button_AddClick"
                    Background="Red" Content="Zapisz" 
                    Canvas.Left="255" Canvas.Top="287" 
                    Height="45" Width="100" Foreground="Cyan" 
                    FontSize="24"  FontFamily="Bahnschrift" FontWeight="Medium" Opacity="0.6" HorizontalAlignment="Left" VerticalAlignment="Top">
                <Button.LayoutTransform>
                    <ScaleTransform ScaleX="2" ScaleY="2"/>
                </Button.LayoutTransform>
                
            </Button>


            <Canvas.Effect>
                <DropShadowEffect
                      ShadowDepth="1"
                      Direction="0"
                      Color="Violet"
                      Opacity="1"
                     BlurRadius="4"/>
            </Canvas.Effect>
        </Canvas>


        <Canvas Height="420" Width="265" Canvas.Right="5" Canvas.Top="120" >
            <TextBlock
              Canvas.Right="10"
              Canvas.Top="10"
              FontSize="24"
               FontWeight="Medium"
              Text="Wybierz użytkownika"
              Foreground="PowderBlue"  Height="35" Width="240" HorizontalAlignment="Left" VerticalAlignment="Center">
                <TextBlock.Effect>
                    <DropShadowEffect
                  ShadowDepth="5"
                  Direction="0"
                  Color="DarkViolet"
                  Opacity="1"
                 BlurRadius="8"/>
                </TextBlock.Effect>
            </TextBlock>
            
            <ListView   MouseDoubleClick="ListView_MouseDoubleClick"
                        x:Name="listUser"
                        AlternationCount="2" ItemsSource="{Binding UserList}" 
                 SelectedItem="{Binding SelectedUser}"
                    
                       SelectionChanged="ListView_SelectionChanged" 
                       ItemContainerStyle="{StaticResource ItemContainerStyle}"
                       Height="363" Width="240" HorizontalAlignment="Left" VerticalAlignment="Top" Canvas.Top="50" Background="DeepSkyBlue" Opacity="0.9" Canvas.Left="9" >

                <ListView.View>
                    <GridView>
                        <GridViewColumn  x:Name="listColumn" Width="230" Header="Nazwa Użytkownika"  DisplayMemberBinding="{Binding UserName}" />
                        
                    </GridView>
                </ListView.View>
                <ListView.Effect>
                    <DropShadowEffect
                  ShadowDepth="9"
                  Direction="0"
                  Color="DarkBlue"
                  Opacity="0.7"
                 BlurRadius="20"
                        />
                </ListView.Effect>
            </ListView>
            <Grid Canvas.Left="30" Canvas.Top="440"
                  x:Name="gridNext">
                
                <Polygon x:Name="nextBtn"
        
                        Stretch="Fill"  Fill="Goldenrod" Points="0,0 0,30 0,10 30,10 30,-10 45,10 30,30 30,20 0,20 0,0 30,0 30,10 0,10">
                    <Polygon.Effect>
                        <DropShadowEffect
                          
                              ShadowDepth="3"
                              Direction="-50"
                              Color="Red"
                              Opacity="1"
                                
                              BlurRadius="5"
                        />
                    </Polygon.Effect>
                   
                </Polygon>
                <TextBlock Text="Dalej" 
              Margin="50 5 10 10 "
              FontSize="24"
              FontWeight="Medium"
              Height="30"
              Width="70"
              Opacity="0.9"
              Foreground="Red"  HorizontalAlignment="Left" VerticalAlignment="Center"></TextBlock>
                <Button 
                    
                    x:Name="Next"
                   
                    Command="{Binding cmdSelectUser}"
                    Background="Transparent" BorderThickness="0" BorderBrush="Transparent"  Height="45" Width="100" Foreground="Cyan" 
                FontSize="24"  FontFamily="Bahnschrift" FontWeight="Medium" Opacity="0.1" HorizontalAlignment="Left" VerticalAlignment="Top"
                Click="Button_OnClick">
                    <Button.LayoutTransform>
                        <ScaleTransform ScaleX="2" ScaleY="2"/>
                    </Button.LayoutTransform>
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <Trigger Property="Command" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </Trigger>
                                <Trigger Property="Background" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </Trigger>
                               
                              
                            </Style.Triggers>
                        </Style>
                       

                    </Button.Style>

                    


                </Button>
                
                
            </Grid>
           

        </Canvas>






    </Canvas>

</Window>
